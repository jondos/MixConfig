<?xml version="1.0" ?>
<!-- XML File for Mix Configuration -->

<MixConfiguration>  <!-- Root-Element -->
<General>
	<MixID> <!-- Each Mix gets an unique ID, ether chosen by the user or generate form the HOST:PORT configuration:

		MixID= URLEncode(HOST_IP:PORT)
		Example:
			Host=mix.inf.tu-dresden.de ==> Host_IP= 141.76.46.120
			Port=6544

			==> MixID=141.76.46.120%3A6544

	-->		
	</MixID>
	<MixType> <!--- One of: FirstMix | MiddleMix | LastMix --> </MixType>
	<MixName> <!-- humand readble String which shortly describes the Mix --> </MixName>
	<Daemon> <!-- Should the mix run in the background as daemon ? Values: True | False --> </Daemon>
	<UserID> <!-- The userid the Mix-process should use than running --> </UserID>
	<NrOfFileDescriptors> <!-- max Number of file descriptors the mix should use --> </NrOfFileDescriptors>

	<Logging>
		<!-- Information of how to log some events -->
		<!-- Only one of the following three is possible -->
		<File><!--The file to which the log data should be writen--></File>
		<SysLog>  <!-- Values: True | False --> </SysLog>
		<Console> <!-- Values: True | False, muse be False, if Daemon=True --> </Console>
	</Logging>
</General>

<Network>
	<ListenerInterfaces>
		<!-- Describes on which interfaces (IP-Addresses etc.) the Mix should listen for incoming connections-->

		<ListenerInterface main="True/False">
			<!-- Describes one Listener, only first mixes could have more than one Listener-->
			<!-- A Listener uses either TCP/IP or Unix Domain Sockets -->
			<!-- If attr main=true, than this is the default listener, from which the Mix-ID is constructed -->

			<!-- NEW: Type of Listener Interface-->
			<Type><!-- Possible Values: RAW/TCP, RAW/UNIX, SSL/TCP, SSL/UNIX --></Type>


			<!-- For TCP/IP (if type= */TCP) -->
			<Host> <!-- Hostname or IP on which to listen --> </Host>
			<IP> <!-- Optional, if given it must be the IP for <HOST> --> </IP>
			<Port> <!-- Port on which to listen--></Port>

			<!-- For Unix Domain Sockets (if type= */UNIX)-->
			<File> <!-- Filename, which should be used for Unix Domain Sockets--> </File>

	 </ListenerInterface>

	</ListenerInterfaces>

	<NextMix>
	<!-- Describes how to connect to the next mix,
			 only usefull for First- or MiddleMix -->

			 <Host> hostname or ip of next Mix </Host>
			 <Port> port of next mix </Port>

			 <File> <!-- Filename, if unix Domain Sockets should be used --> </File>

	</NextMix>

	<Proxies>
	<!-- Describes which proxies are available for the last mix and how to reach them,
			only useful for the last mix -->

			<Proxy>
				<!-- Describes one single proxy -->
					<ProxyType> <!-- Type of Proxy, one of: HTTP|SOCKS --></ProxyType>

					<!-- How to reach this proxy ?-->
					<Host> </Host>
					<Port> </Port>

					<File> </File>

			</Proxy>

	</Proxies>
	<InfoService>
		<!-- Describes how to connect to the InfoService -->

			 <Host> hostname or ip of the InfoService </Host>
			 <Port> port of the InfoService </Port>

			 <File> <!-- Filename, if unix Domain Sockets should be used --> </File>
		
	</InfoService>
</Network>

<Certificates>

	<OwnCertificate>
		<X509PKCS12>
			<!-- Base64 encoded version of the DER encoded version of a PKCS#12 structure which includes the private key and X.509 Certificate -->		
		</X509PKCS12>

		<X509Certificate>
			<!-- Base64 encoded version of the DER encoded version of the X.509 Certificate -->
			<!-- this is the public test certificate, which belongs to the certificate above -->
		</X509Certificate>
	</OwnCertificate>
	
	<PrevMixCertificate>
	<!-- X.509 Public Key Test Certificate of the key from the previous mix -->
		<X509Certificate>
			<!-- Base64 encoded version of the DER encoded version of the X.509 Certificate -->
		</X509Certificate>
	</PrevMixCertificate>
	
	<NextMixCertificate>
	<!-- X.509 Public Key Test Certificate of the key from the next mix -->
		<X509Certificate>
			<!-- Base64 encoded version of the DER encoded version of the X.509 Certificate -->
		</X509Certificate>
	</NextMixCertificate>

</Certificates>

<Description>
	<Location> <!-- Describes the location of the mix server -->
		<City>    </City>
		<State>   </State>
		
		<Position> 
			<Geo> <!--The geographical position of the mix server -->
				<Longitude></Longitude>
				<Latitude></Latitude>
			</Geo>
		</Position>
	
	</Location>

</Description>


</MixConfiguration>
